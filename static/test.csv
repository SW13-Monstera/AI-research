,problem_id,problem,assign,user_answer,content_standards,correct_content_standards,keyword_standards,correct_keyword_standards,annotator
421,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"큐(Queue) 는 사전적으로 ‘줄서서 기다리다’ , ‘대기행렬’ 이라는 의미를 가지고 있습니다. 큐(Queue) 자료구조는 줄에 기다리는 순서대로 먼저 줄을 선 사람이 먼저 입장하는 구조와 동일하게 이루어져있습니다. 이러한 특징을 선입선출(First-In First-Out) 이라고 표현합니다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']",['First In First Out - 2점'],"['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",['FIFO - 2점'],mjw8523@gmail.com
136,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,"쿠키에 만료시간은 있지만 파일로 저장되기 때문에 브라우저를 종료해도 계속해서 정보가 남아 있을 수 있다. 만료기간을 넉넉히 잡아두면 쿠키를 삭제 할 때까지 유지될수도 있다.
세션은 만료기간을 정할수는 있지만 브라우저가 종료되면 그에 상관없이 삭제된다.","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']",['Lifecycle에 대한 내용 - 1점'],"['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['Lifecycle - 1점', '저장위치 - 2점']",mjw8523@gmail.com
343,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,카디널리티가 높으면서 자주 조회된다면 인덱스로 적합하다.,"['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']","['카디널리티 - 1.25점', '조회 빈도 - 1.25점']",mjw8523@gmail.com
107,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,후보 키 중에서 레코드들의 식별자로 선택한 하나의 키,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['후보키 중 엔티티를 대표할 수 있는 키 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
181,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,HTTP의 멱등이란 같은 요청이면 반환되는 모든 응답이 모두 동일함을 의미합니다. POST 요청은 요청할때마다 서버의 리소스를 생성하거나 업데이트하므로 멱등성이 보장되지 않습니다.,"['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']","['POST - 1점', '동일한 요청 - 2점']",mjw8523@gmail.com
189,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,멱등성은 API 요청이 한 번만 완료되도록 합니다. 멱등성 요청에서는 원래 요청이 성공적으로 완료된 경우 후속 재시도에서 원래 성공한 요청의 결과를 반환하며 추가 영향이 없습니다.,"['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']",['같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점'],"['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']",['동일한 요청 - 2점'],mjw8523@gmail.com
83,recQWCxI7HfuXiYPO,[운영체제 1] Deadlock의 발생조건 네가지를 간단히 설명해주세요.,big jo,"교착 상태는 한 시스템 내에서 다음의 4가지 조건이 동시에 성립할 때 발생한다.


상호 배제(Mutual Exclusion)

: 자원은 한 번에 한 프로세스만이 사용할 수 있어야 한다.

점유 대기 (Hold and Wait)

: 최소한 하나의 자원을 점유하고 있으면서 다른 프로세스에 할당되어 사용되고 있는 자원을 추가로 점유하기 위해 대기하는 프로세스가 있어야 한다.

즉, 이미 자원을 사용중인데, 다른 프로세스가 사용중인 자원을 사용하기 위해 대기하고 있는 상태의 프로세스가 존재해야 한다.

비선점 (No preemption)

: 다른 프로세스에 할당된 자원은 사용이 끝날 때까지 강제로 빼앗을 수 없어야 한다.

순환 대기 (Circular wait)

: 프로세스의 집합에서 P0은 P1이 점유한 자원을 대기하고 P1은 P2가 점유한 자원을 대기하고, P2...Pn-1d은 Pn이 점유한 자원을 대기하며 Pn은 P0이 점유한 자원을 요구해야 한다.","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']",alsxmqkqh23@gmail.com
186,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키는 개별 행을 검색하는데 사용하는 고유한 키이다. 다른 행과 구별되는 중복없는 키이다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
325,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,"규모가 작지 않은 테이블에서 INSERT, UPDATE, DELETE가 자주 발생하지 않는 컬럼에 적용해야 합니다.","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",['수정 빈도 - 1.25점'],mjw8523@gmail.com
232,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,각 배열의 원소들의 데이터 크기는 같다. 또한 연속적으로 메모리에 저장된다는 특징이 있으며 인덱스를 통해 랜덤액세스가 가능하다.,"['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']","['랜덤 액세스 -2점', '저장 순서 - 2점']",mjw8523@gmail.com
407,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"선입선출(First In First Out, FIFO)의 형태를 가지고 있는 자료구조이다.
먼저 온 것이 먼저 나가는 특성을 가지는 것이, 줄을 서서 기다릴 때 먼저 온 사람이 먼저 들어가는 것과 같은 이치이다. ","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']",['First In First Out - 2점'],"['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",['FIFO - 2점'],mjw8523@gmail.com
400,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"Stack 이라는 자료구조는 메모리에서도 쓰이고 실생활에서도 볼 수 있는 자료구조 입니다. (수식계산, 수식괄호검사, 웹브라우저의 뒤로/앞으로) LIFO(후입 선출)의 특징을 가지고 있는 것을 다들 알고 있을 것입니다. ","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']",['Last In First Out  - 2점 '],"['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']",['LIFO - 2점'],mjw8523@gmail.com
51,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,"여러 데이터를 하나의 이름으로 그룹핑해서 관리하는 자료구조(하나의 변수에 여러 데이터). 보통 반복문과 결합하여 많은 정보를 효율적으로 처리한다. 배열의 인덱스를 이용하여 값을 식별할 수 있으며, 크기가 고정되어있다.","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']",['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점'],"['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",[],shiroed1211@gmail.com
429,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"큐(Queue)는 한쪽 끝에서만 삽입이 이루어지고, 다른 한쪽 끝에서는 삭제 연산만 이루어지는 유한 순서 리스트이다. First in First Out (FIFO) 선입선출이라고 생각하면 쉽습니다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', 'First In First Out - 2점']","['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
412,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"큐(queue)는 차례를 기다리는 줄이라는 의미를 가지고 있는 단어처럼 먼저 들어온 자료부터 순서대로 처리하는 방식을 말한다. 한 쪽 끝에서는 자료의 삽입 연산만 가능하고 반대쪽 끝에서는 삭제만 가능한 구조로서 선입선출(FIFO : First In First Out)의 특징을 가진다. 앞(front)에서는 삭제만 일어나고, 뒤(rear)에서는 삽입만 일어난다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', 'First In First Out - 2점']","['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
148,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,쿠키에 만료시간은 있지만 파일로 저장되기 때문에 브라우저를 종료해도 계속해서 정보가 남아 있을 수 있다. 만료기간을 넉넉히 잡아두면 쿠키를 삭제 할 때까지 유지될수도 있다.,"['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']",['Lifecycle에 대한 내용 - 1점'],"['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']",['Lifecycle - 1점'],mjw8523@gmail.com
116,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,후보키(candidate key)중 데이터베이스 설계자가 선정하는 하나의 키,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",[],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
338,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,중복도가 낮은 컬럼이 적합하다.,"['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",[],mjw8523@gmail.com
23,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,"동일한 요청을 한번 보내는 것과 여러번 연속으로 보내는 것이 같은 효과를 가지고, 서버의 상태도 동일하게 남을 때 해당 HTTP Method가 멱등성을 가진다고 한다.","['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['서버가 상태를 갖지 않는다는 내용 - 2점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']","['동일한 요청 - 2점', 'stateless - 2점']",mjw8523@gmail.com
35,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,"멱등성은 같은 행위를 여러번 수행해도 결과가 같다는 것을 의미한다. 멱등성을 따질 때에는 서버의 백엔드 상태만 보면 되며, 각 요청에서 반환하는 응답 코드는 다를 수 있다. ","['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']",['같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점'],"['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']",['동일한 요청 - 2점'],mjw8523@gmail.com
360,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"한 쪽 끝에서만 자료를 넣고 뺄 수 있는 LIFO(Last In First Out) 형식의 자료 구조. 즉, 가장 최근에 스택에 추가한 항목이 가장 먼저 제거될 항목이다.
","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삭제 - 1점', '삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
98,recQWCxI7HfuXiYPO,[운영체제 1] Deadlock의 발생조건 네가지를 간단히 설명해주세요.,big jo,"다음 4가지를 모두 만족하여야 교착상태가 발생할 수 있다.
1.
상호 배제 (mutual exclusion)
프로세스가 자원을 사용할 때 다른 프로세스와 동시에 사용할 수 없는 조건을 의미한다.
2.
점유 및 대기 (hold and wait)
한 자원을 점유한 상태에서 다른 자원을 요청하기 위해 대기할 수 있는 조건을 의미한다.
3.
비선점 (nopreemption)
한 프로세스가 자원을 할당 받으면 작업이 끝날 때 까지 시스템에서 제어권을 뺏을 수 없는 조건을 의미한다.
4.
순환 대기 (circular-wait)
여러개의 프로세스가 서로의 자원을 요청하고 있는 상태를 의미한다.","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']",alsxmqkqh23@gmail.com
295,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,"쓰레드는 한 프로세스 내에서 동작되는 여러 실행의 흐름으로 프로세스 내의 주소 공간이나 자원들을 같은 프로세스 내에 쓰레드끼리 공유하면서 실행됩니다. 따라서 한 쓰레드가 프로세스 자원을 변경하면 다른 이웃 쓰레드도 그 변경 결과를 즉시 볼 수 있습니다. 하지만 프로세스는 별도의 주소 공간에서 실행되며 한 프로세스는 다른 프로세스의 변수나 자료구조에 접근할 수 없습니다. 한 프로세스가 다른 프로세스의 자원에 접근하려면 프로세스 간 통신 (IPC)을 사용해야 합니다. 예를 들어 파이프, 파일, 소켓 등이 이에 해당합니다.","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",['영역 공유 - 1점'],mjw8523@gmail.com
185,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,멱등성이란 어떤 대상에 같은 연산을 여러번 적용해도 결과가 달라지지 않는 성질이다. ,"['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']",['같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점'],"['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']",[],mjw8523@gmail.com
316,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,카디널리티가 높으면 인덱스 설정에 좋은 컬럼이다.  선택도가 낮으면 인덱스 설정에 좋은 컬럼이다. 조회 활용도가 높으면 인덱스 설정에 좋은 컬럼이다. 수정 빈도가 낮으면 인덱스 설정에 좋은 컬럼이다.,"['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",mjw8523@gmail.com
321,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,"INSERT, UPDATE, DELETE가 자주 발생하지 않는 컬럼","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",['수정 빈도 - 1.25점'],mjw8523@gmail.com
150,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키는 상징성을 가지며 가급적 짧으면 유리하다. 테이블간의 연결고리로 사용하기 때문이다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",[],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
282,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,"프로세서(처리기, CPU)에 의해 처리되는 프로그램이 프로세스이고 스레드는 프로세스의 특정 실행 단위이다.","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']",['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점'],"['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",[],mjw8523@gmail.com
40,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,"같은 타입의 데이터를 나열한 선형 자료구조이며, 연속된 메모리 공간에 순차적으로 저장한다. 또한 크기가 고정되어 있고, 선언 시 배열의 크기를 정하고 이를 변경할 수 없다.","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']",['논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점'],"['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",['저장 순서 - 2점'],shiroed1211@gmail.com
193,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,"연산을 여러 번 적용하더라도 결과가 달라지지 않는 성질을 의미한다. 동일 요청은 동일 응답을 가져야 한다는 의미가 아니며, 요청으로 어떤 부작용도 발생하지 말아야 한다는 의미가 아님에 유의해야 한다. GET은 멱등 메서드지만, POST는 멱등 메서드가 아니다.","['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']","['POST - 1점', '동일한 요청 - 2점']",mjw8523@gmail.com
63,recThdU8zcC6rL6fa,[데이터베이스 2] Transaction의 네가지 특성을 설명해주세요.,kshired,"ACID, 원자성은 트랜잭션이 데이터베이스에 모두 반영되던가, 아니면 전혀 반영되지 않아야 한다는 것. 일관성은 트랜잭션의 작업 처리 결과가 항상 일관성이 있어야 한다는 것. 독립성은 둘 이상의 트랜잭션이 동시에 실행되고 있을 경우 어떤 하나의 트랜잭션이라도, 다른 트랜잭션의 연산에 끼어들 수 없다는 점. 지속성은 트랜잭션이 성공적으로 완료됬을 경우, 결과는 영구적으로 반영되어야 한다는 점.","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']",shiroed1211@gmail.com
274,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,"프로세스는 프로그램의 단위이고 스레드는 작업의 단위이며 프로세스를 할당할 때 메모리의 스택, 힙, 코드, 데이터 영역을 전부 할당하지만 스레드는 프로세스의 자원을 공유하기 때문에 스택영역만 할당된다.","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점']","['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']","['작업단위 - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",mjw8523@gmail.com
235,recThdU8zcC6rL6fa,[데이터베이스 2] Transaction의 네가지 특성을 설명해주세요.,kshired,"일관성(Consistency) : 트랜잭션의 작업 처리 결과는 항상 일관성이 있어야 한다.
영속성(Durability) : 트랜잭션이 성공적으로 완료 되었으면 결과는 영구적으로 반영되어야 한다.","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']","['일관성 - 1.25 점', '지속성 - 1.25 점']",mjw8523@gmail.com
373,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"자료구조(Data Structure)의 한 종류로 후입선출(LIFO : List in First out)구조를 가지고 있다.
따라서 가장 먼저 들어간 데이터가 가장 끝부분에 위치하게 되는 구조이다.
이러한 특징으로 데이터 저장과 같은 기능에는 적합하나, 실시간 처리를 요구하는 구조에서는 부적합한 자료구조이다.","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']",['Last In First Out  - 2점 '],"['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
22,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,"멱등한 메서드는 서버의 상태를 변경시킬 수도 있고, 시키지 않을 수도 있습니다. 다만 요청한 사항은 에러가 나거나, 지연이 발생하지 않는 한 요청에 대한 서버의 상태는 항상 같습니다.","['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']",['서버가 상태를 갖지 않는다는 내용 - 2점'],"['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']",['stateless - 2점'],mjw8523@gmail.com
135,recQWCxI7HfuXiYPO,[운영체제 1] Deadlock의 발생조건 네가지를 간단히 설명해주세요.,big jo,대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다.,"['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']",['순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점'],"['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']",['순환 대기 - 1.25점'],mjw8523@gmail.com
309,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,프로세스는 격리 된 실행 단위이며 스레드는 격리되어 있지 않고 메모리를 공유합니다.,"['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']",[],"['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']","['메모리 - 1점', '영역 공유 - 1점']",mjw8523@gmail.com
176,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,"세션이 쿠키에 비해 보안이 높은 편이나 쿠키를 사용하는 이유는 세션은 서버에 저장되고, 서버의 자원을 사용하기에 서버 자원에 한계가 있고, 속도가 느려질 수 있기 때문에 자원관리 차원에서 쿠키와 세션을 적절한 요소 및 기능에 병행 사용하여 서버 자원의 낭비를 방지하며 웹사이트의 속도를 높일 수 있다.","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['보안 - 1점', '저장위치 - 2점', '속도 - 1점']",mjw8523@gmail.com
183,recQWCxI7HfuXiYPO,[운영체제 1] Deadlock의 발생조건 네가지를 간단히 설명해주세요.,big jo,하나의 자원은 하나의 프로세스에서만 사용할 수 있고 각각의 프로세스에서 서로의 자원에 대해 대기하는 상태일때 발생합니다.,"['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']",[],mjw8523@gmail.com
49,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,"연속된 메모리의 공간에 순차적으로 데이터를 저장하는 선형 자료구조이다.
크기가 고정적이고 공간이 낭비되거나 재할당이 필요할 수 있다. 자바스크립트 처럼 대부분의 스크립트 언어는 배열의 크기를 동적으로 변경할 수 있다.
논리적인 저장 순서와 물리적(메모리) 저장 순서가 일치한다. 인덱스를 사용해 특정 원소에 접근이 가능하다.(Random Access ) 메모리는 배열이 선언될 때(컴파일 할 때) Stack영역에 할당한다. 시간복잡도는 O(1)이다.","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",shiroed1211@gmail.com
194,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키는 유일하며 NULL값을 갖지 않고 변경되지 않는 키이다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']","['NULL 값을 가질 수 없다 - 1점', '자주 변경되지 않아야 한다 - 1점']","['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
431,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"큐(queue)는 차례를 기다리는 줄이라는 의미를 가지고 있는 단어처럼 먼저 들어온 자료부터 순서대로 처리하는 방식을 말한다.

한 쪽 끝에서는 자료의 삽입 연산만 가능하고 반대쪽 끝에서는 삭제만 가능한 구조로서 선입선출(FIFO : First In First Out)의 특징을 가진다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', 'First In First Out - 2점']","['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
440,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,큐(Queue)란 양 쪽 끝에서만 데이터를 넣거나 뺄 수 있는 선입선출(First-In-First-Out) 형태의 선형 자료구조이다. 입력된 순서대로 처리해야하는 너비 우선 탐색 등에 사용된다.,"['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']",['First In First Out - 2점'],"['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
172,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,쿠키는 쿠키에 정보가 있기 때문에 서버에 요청 시 속도가 빠르고 세션은 정보가 서버에 있기 때문에 처리가 요구되어 비교적 느린 속도를 낸다.,"['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['저장위치 - 2점', '속도 - 1점']",mjw8523@gmail.com
390,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"가장 나중에 삽입된 것이 가장 먼저나가는 구조로 LIFO라 불리며, 배열 혹은 연결리스트로 구현이 가능한 자료구조. 삽입 삭제가 O(1)에 가능하다.","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']","['Last In First Out  - 2점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
110,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키 역시 DBMS에서 테이블에 설정하는 하나의 제약 조건 중 하나입니다. 기본키 제약 조건은 테이블 내에서 유일하게 존재하는 값의 조합을 설정해서 중복된 데이터가 테이블에 삽입되는 것을 방지하는 제약 조건입니다,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
79,recThdU8zcC6rL6fa,[데이터베이스 2] Transaction의 네가지 특성을 설명해주세요.,kshired,"원자성
- 트랜잭션은 분해가 불가능한 최소의 단위로 연산 전체가 처리되거나 처리되지 않아야 한다.
일관성
- 트랜잭션이 실행을 성공적으로 완료하면 언제나 모순 없이 일관성 있는 데이터베이스 상태를 보존
고립성
- 트랜잭션이 실행 중 생성하는 연산의 중간 결과를 다른 트랜잭션이 접근할 수 없음
지속성
- 성공이 완료된 트랜잭션의 결과는 영구적으로 데이터베이스에 저장","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']",shiroed1211@gmail.com
415,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"번호표 순서대로 먼저 온 고객부터 처리해 주는 것과 같이 선입선출 형태의 구조를 큐(Queue)라고 부릅니다. 큐는 스택과 마찬가지로 삽입과 삭제의 위치와 방법이 제한되어 있는 자료구조이지만 한쪽 끝에서는 삽입 작업이 이루어지고 반대쪽 끝에서는 삭제 작업이 이루어지는 자료구조입니다. 데이터가 삽입된 순서대로 삭제되는 선입선출(FIFO, First-In-First-Out)  구조입니다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', 'First In First Out - 2점']","['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
174,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키는 테이블을 설계하여 사용할 때 해당 테이블을 고유하게 식별하는 키를 의미한다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
434,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"큐는 스택과 반대로 FIFO(First In First Out)의 구조를 가지고 있습니다. 먼저 들어오는 것이 먼저 나가는 구조이기 때문에 데이터를 추가한 순서대로 제거할 수 있으며, 이러한 특징 때문에 BFS 등의 개발에 사용되고 있습니다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']",['First In First Out - 2점'],"['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
357,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,"카디널리티, 선택도, 조회 빈도 등을 고려하여 데이터를 빠르게 조회할 수 있는 컬럼에 설정한다.","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']",[],"['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']","['카디널리티 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",mjw8523@gmail.com
81,recQWCxI7HfuXiYPO,[운영체제 1] Deadlock의 발생조건 네가지를 간단히 설명해주세요.,big jo,"첫번째로 상호배제가 있다. 프로세스들이 필요로 하는 자원에 대해 배타적인 통제권을 요구한다.
다음으로 점유대기는 프로세스가 할당된 자원을 가진 상태에서 다른 자원을 기다린다.
비선점은 프로세스가 어떤 자원의 사용을 끝낼 때까지 그 자원을 뺏을 수 없다.
순환대기 또한 중요하다. 각 프로세스는 순환적으로 다음 프로세스가 요구하는 자원을 가지고 있다.
이 조건 중에서 한 가지라도 만족하지 않으면 교착 상태는 발생하지 않는다. 이 중 순환대기 조건은 점유대기 조건과 비선점 조건을 만족해야 성립하는 조건이므로, 위 4가지 조건은 서로 완전히 독립적인 것은 아니다.","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제에 대한 내용 -> 한 번에 프로세스 하나만 해당 자원을 사용할 수 있다. 사용중인 자원을 다른 프로세스가 사용하려면 요청한 자원이 해제될 때까지 기다려야 한다. - 1.25점', '비선점에 대한 내용 → 이미 할당된 자원을 강제로 빼앗을 수 없다. - 1.25점', '순환 대기에 대한 내용 -> 대기 프로세스의 집합이 순환 형태로 자원을 대기하고 있어야 한다. - 1.25점', '점유 대기에 대한 내용 -> 자원을 최소한 하나 보유하고, 다른 프로세스에 할당된 자원을 점유하기 위해 대기하는 프로세스가 존재해야 한다 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']","['상호 배제 - 1.25점', '점유 대기 - 1.25점', '순환 대기 - 1.25점', '비선점 - 1.25점']",alsxmqkqh23@gmail.com
388,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"스택은 한 쪽으로만 들어가기 때문에 처음 들어간 것은 밑에 깔려서 나중에 나올 수 밖에 없다. (First In Last Out=FILO)

이로인해 삽입, 삭제, 조회시 O(1)의 시간복잡도가 소요된다.
","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']",['Last In First Out  - 2점 '],"['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
3,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,쿠키는 클라이언트 로컬에 저장되기 때문에 변질되거나 request에서 스니핑 당할 우려가 있어서 보안에 취약하지만 세션은 쿠키를 이용해서 sessionid만 저장하고 그것으로 구분해서 서버에서 처리하기 때문에 보안성이 좋습니다. ,"['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['보안 - 1점', '저장위치 - 2점']",mjw8523@gmail.com
414,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"한쪽 끝에서 삽입되고, 다른 한쪽 끝으로 삭제되는 리스트 구조의 일종임. 데이터의 입력,출력이 정해진 위치에서 만 가능. FIFO 규칙을 따른다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']",['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점'],"['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
142,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,고유값을 가지는 후보키들 중에서 레코드를 가장 잘 대표하는 하나를 골라 기본키로 선정하여 사용한다. 값이 꼭 존재해야 하고 구분을 위한 고유값을 가져야 한다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점']","['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
301,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,"프로세스는 각각 독립된 메모리 영역인 data, code, stack heap 구조를 모두 할당받는다.
하지만 스레드는 프로세스 내에서 각각 Stack만 따로 할당받고 code, data, heap 영역은 공유한다.","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']","['Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",mjw8523@gmail.com
229,recThdU8zcC6rL6fa,[데이터베이스 2] Transaction의 네가지 특성을 설명해주세요.,kshired,"원자성(Atomicity) : 트랜잭션이 DB에 모두 반영되거나, 혹은 전혀 반영되지 않아야 한다.
일관성(Consistency) : 트랜잭션의 작업 처리 결과는 항상 일관성이 있어야 한다.
독립성(Isolation) : 둘 이상의 트랜잭션이 동시에 병행 실행되고 있을 때, 어떤 트랜잭션도 다른 트랜잭션 연산에 끼어들 수 없다.","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '원자성 - 1.25 점']",mjw8523@gmail.com
112,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,"각 행마다 행을 식별할 수 있도록 전부 다른 값이 저장된 열을 찾으셨다면, 그 열을 가지고 기본 키를 만들 수 있습니다. 다시 한번 강조하자면, 기본 키는 테이블 내의 각 행을 고유하게 하는 열입니다. 고로, 기본 키는 모든 행이 고유한 값을 가지고 있는지 혹은 값이 비어있는 행이 있는지 확인할 수 있도록 합니다. 예를 들어, 여러분이 이미 어떤 열에 존재하는 값을 새로운 행을 만들어서 추가하고자 한다면, 이는 기본 키에 의해서 생성이 제한됩니다.

또한, 기본 키는 NULL 값을 받아들이지 않습니다. 즉, 기본 키 열에는 NULL 값이 존재할 수 없습니다. 미국 시민의 정보를 저장하고 있는 테이블인 citizen 예시가 기억나십니까? 만약 social_security_number 열에 NULL 값이 포함된 행을 추가하고자 한다면, 이는 기본 키에 의해서 제지 당합니다. 다시 말해서, 기본 키는 기본 키가 되는 열의 행 값이 고유하고 비어있지 않도록 만들어 줍니다.","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', 'NULL 값을 가질 수 없다 - 1점']","['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']","['유일성 - 1점', '식별자 - 1점']",mjw8523@gmail.com
214,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키는 관계형 데이터베이스 테이블 내에 기록을 유일하게 식별하는 역할을 한다. 유니크하며 ,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
437,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired, Last In First Out(LIFO) 구조로 가장 나중에 들어간 원소가 가장 먼저 나오게 된다. ,"['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']",[],"['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",[],mjw8523@gmail.com
359,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,카디널리티가 높고 선택도가 낮으며 자주 조회되고 수정 빈도가 낮은 컬럼입니다.,"['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",mjw8523@gmail.com
332,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,"인덱스 컬럼의 분포도가 10~15% 이내인 컬럼이며 부분처리를 목적으로 하는 경우, 입출력 장표 등에서 조회 및 출력조건으로 사용되는 경우, 수정이 빈번하지 않은 경우에 인덱스로 사용해야 한다.","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['조건절에서 많이 사용되는 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']","['수정 빈도 - 1.25점', '조회 빈도 - 1.25점']",mjw8523@gmail.com
366,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,가장 최근에 보관한 자료를 먼저 꺼내는 LIFO(Last In First Out)방식의 자료 구조이다. 리스트의 한쪽으로 삽입과 삭제 연산을 수행한다.,"['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삭제 - 1점', '삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
101,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,기본키는 후보키 중에서 선택한 주키(Main Key)이다. 한 릴레이션에서 특정 튜플을 유일하게 구별할 수 있는 속성이다. Null값을 가질 수 없다. 기본키로 정의된 속성에는 동일한 값이 중복되어 저장될 수 없다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점']","['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']","['유일성 - 1점', '식별자 - 1점']",alsxmqkqh23@gmail.com
287,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,프로세스는 자원을 공유하지 않지만 스레드는 자원을 공유한다.,"['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']",[],"['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",['영역 공유 - 1점'],mjw8523@gmail.com
13,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,세션은 웹 서버에 저장되고 쿠키는 클라이언트(접속자 PC)에 저장된다. 세션은 Object로 저장되고 쿠키는 Text형태로 저장된다. ,"['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']",['저장위치 - 2점'],mjw8523@gmail.com
308,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,프로그램의 모든 스레드는 프로세스 내에 논리적으로 포함됩니다. 프로세스는 가중치가 있지만 스레드는 가중치가 있습니다.,"['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']",['스레드는 프로세스 내에 존재한다는 내용 - 1점'],"['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",[],mjw8523@gmail.com
258,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,"인덱스를 가지고있으며 순차적으로 데이터가 삽입 삭제될수있는 형태의 자료구조이다. 인덱스로 특정요소를 빠르게 색인가능하며, 실제메모리상에서 물리적으로 데이터가 순차적으로 저장한다.

","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",['저장 순서 - 2점'],mjw8523@gmail.com
119,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,여러 후보키 중 대표적인 키 하나를 선택해 테이블의 기본 키로 만든다.,"['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['후보키 중 엔티티를 대표할 수 있는 키 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",['대표성 - 1점'],mjw8523@gmail.com
111,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,"설계자가 여러 후보키 중 하나를 선택하여 정의한 식별자 (유일성, 최소성)기본키의 모든 필드의 값은 null 이 될 수 없다.","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']",['NULL 값을 가질 수 없다 - 1점'],"['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']","['최소성 - 1점', '유일성 - 1점']",mjw8523@gmail.com
47,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,"배열은 메모리상에 순서대로 데이터를 저장합니다. 배열은 데이터를 인덱스로 조회할 수 있기 때문에 인덱스 조회성능이 높고, 데이터가 메모리에 순서대로 저장되어 있기 때문에, 캐시의 지역성으로 인하여 비교적 빠르게 탐색을 수행할 수 있습니다.","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",['저장 순서 - 2점'],shiroed1211@gmail.com
15,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,"가장 큰 차이점은 사용자의 정보가 저장되는 위치입니다. 때문에 쿠키는 서버의 자원을 전혀 사용하지 않으며, 세션은 서버의 자원을 사용합니다. 쿠키는 클라이언트 로컬에 저장되기 때문에 변질되거나 request에서 스니핑 당할 우려가 있어서 보안에 취약하지만 세션은 쿠키를 이용해서 sessionid만 저장하고 그것으로 구분해서 서버에서 처리하기 때문에 비교적 보안성이 좋습니다. ","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['보안 - 1점', '저장위치 - 2점']",mjw8523@gmail.com
16,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,"가장 큰 차이점은 사용자의 정보가 저장되는 위치입니다. 때문에 쿠키는 서버의 자원을 전혀 사용하지 않으며, 세션은 서버의 자원을 사용합니다. 보안 면에서 세션이 더 우수하며, 요청 속도는 쿠키가 세션보다 더 빠릅니다.  ","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['보안 - 1점', '저장위치 - 2점', '속도 - 1점']",mjw8523@gmail.com
216,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,쿠키는 클라이언트측에 저장이 되고 세션은 서버측에 저장이 된다. 그렇기 때문에 쿠키에 로그인 정보를 담아 통신하는 경우 쿠키가 탈취당했을 시에 보안적으로 위험하다. 그러나 세션은 서버에 저장을 하기 때문에 중간에 탈취를 당할 위험이 없다. 그러나 서버에 따로 저장을 하고 DB에 접근해야 하기 때문에 오버헤드가 발생할 수 있다.,"['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['보안 - 1점', '저장위치 - 2점', '속도 - 1점']",mjw8523@gmail.com
302,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,"각각의 프로세스는 별도의 주소 공간에서 실행되며, 한 프로세스는 다른 프로세스의 변수나 자료구조에 접근하려면 IPC(inter-process communication)을 사용해야 한다.
스레드는 한 프로세스 내에서 동작되는 여러 실행의 흐름으로, 프로세스 내의 주소 공간이나 자원들을 같은 프로세스내에 스레드끼리 공유하기 때문에 스택영역을 제외하고는 서로의 자원에 접근할 수 있다.","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']","['Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",mjw8523@gmail.com
44,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,같은 자료형을 가진 변수를 하나로 나타낸 것이다. 연속된 메모리 공간으로 이루어져있다. 정적 표현이다. 인덱스를 이용하여 표현한다. 지역성을 갖고 있다.,"['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",[],shiroed1211@gmail.com
279,rec1QvAvB4CMami3p,[운영체제 2] 프로세스와 스레드의 차이점을 설명해주세요.,jack,프로세스는 컴퓨터에서 연속적으로 실행되고 있는 프로그램이고 스레드는 프로세스 내에서 실행되는 여러 흐름의 단위입니다.,"['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '스레드는 프로세스의 Code, Data, Heap 영역을 공유받는다는 내용 - 2점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점', '스레드는 프로세스 내에 존재한다는 내용 - 1점']","['스레드는 할당받은 자원을 이용(task)하는 실행의 단위라는 내용 - 1점', '프로세스는 운영체제로부터 시스템 자원을 할당(프로그램)받는 작업의 단위라는 내용 - 1점']","['작업단위 - 1점', 'context switching - 1점', 'Stack - 1점', '메모리 - 1점', '영역 공유 - 1점']",[],mjw8523@gmail.com
446,recUcGjT9Xkb7N5pu,[자료구조 3] Queue의 특징을 설명해주세요.,kshired,"선입선출(FIFO, First in first out) 방식의 자료구조를 말한다.  큐는 한쪽 끝에서 삽입 작업이, 다른 쪽 끝에서 삭제 작업이 양쪽으로 이루어진다.","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', '삽입, 삭제의 시간 복잡도 O(1) - 2점', 'First In First Out - 2점']","['rear에서 자료의 삽입이 front에서 자료의 삭제가 이루어짐 - 1점', 'First In First Out - 2점']","['시간복잡도 - 1점', 'FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']","['FIFO - 2점', '삭제(POP) - 1점', '삽입(PUSH) - 1점']",mjw8523@gmail.com
346,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,"높은 카디널리티와 낮은 선택도, 높은 조회활용도와 낮은 수정빈도를 갖는다.","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",mjw8523@gmail.com
52,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,논리적 저장 순서와 물리적 저장 순서가 일치하는 자료구조. 따라서 인덱스(Index)로 해당 원소에 접근할 수 있으며 Random Access가 가능합니다. 하지만 삽입/삭제 시 해당 원소에 접근하여 작업을 완료한 후 빈 공간이 생기지 않도록 shift 해줘야 하므로 O(N)의 시간이 소요됩니다.,"['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']","['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']","['랜덤 액세스 -2점', '저장 순서 - 2점']",shiroed1211@gmail.com
377,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"스택(Stack)은 쌓다, 쌓이다, 포개지다 와 같은 뜻을 가지고 있다. Stack은 직역 그대로, 데이터(data)를 순서대로 쌓는 자료구조이다.
 입력과 출력이 하나의 방향으로 이루어져 접근이 제한적이다.
이러한 Stack 자료구조의 정책을 LIFO(Last In First Out) 혹은 FILO(First In Last Out)이라고 부르기도 한다","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삭제 - 1점', '삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
71,recThdU8zcC6rL6fa,[데이터베이스 2] Transaction의 네가지 특성을 설명해주세요.,kshired,트랜잭션에게는 통칭 ACID라는 특징이 있다. 원자성 트랜잭션과 관련된 작업들이 부분적으로 실행되다가 중단되지 않는 것을 보장하는 능력이다. 일관성 트랜잭션이 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 유지하는 것을 의미한다. 독립성 트랜잭션을 수행 시 다른 트랜잭션의 연산 작업이 끼어들지 못하도록 보장하는 것을 의미한다. 지속성 성공적으로 수행된 트랜잭션은 영원히 반영되어야 함을 의미한다.,"['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['만약 트랜잭션 중간에 어떠한 문제가 발생한다면 트랜잭션에 해당하는 어떠한 작업 내용도 수행되어서는 안되며 아무런 문제가 발생되지 않았을 경우에만 모든 작업이 수행되어야 한다. - 1.25 점', '트랜잭션이 완료된 다음의 상태에서도 트랜잭션이 일어나기 전의 상황과 동일하게 데이터의 일관성을 보장해야 한다. - 1.25 점', '각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다. - 1.25 점', '트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다. - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']","['일관성 - 1.25 점', '독립성 - 1.25 점', '지속성 - 1.25 점', '원자성 - 1.25 점']",shiroed1211@gmail.com
114,recio3s0A77i0kkEn,[데이터베이스 1] Primary key가 무엇인지 설명해주세요.,big jo,"PRIMARY KEY 제약 조건을 설정하면, 해당 필드는 NOT NULL과 UNIQUE 제약 조건의 특징을 모두 가집니다.

따라서 이 제약 조건이 설정된 필드는 NULL 값을 가질 수 없으며, 또한 중복된 값을 가져서도 안 됩니다.

이러한 PRIMARY KEY 제약 조건을 기본 키라고 합니다.","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', '키를 구성하는 속성들 중 꼭 필요한 최소한의 속성들로만 키를 구성 - 1점', 'NULL 값을 가질 수 없다 - 1점', '후보키 중 엔티티를 대표할 수 있는 키 - 1점', '자주 변경되지 않아야 한다 - 1점']","['특정 튜플을 유일하게 구별할 수 있는 속성 - 1점', 'NULL 값을 가질 수 없다 - 1점']","['최소성 - 1점', '대표성 - 1점', '유일성 - 1점', '불변성 - 1점', '식별자 - 1점']",[],mjw8523@gmail.com
125,recySzF3AcHS6Llfl,[네트워크 2] HTTP 메서드의 멱등성에 대해서 설명해주세요.,jack,"동일한 요청을 한 번 보내는 것과 여러 번 연속으로 보내는 것이 같은 효과를 지니고, 서버의 상태도 동일하게 남을 때, 해당 HTTP 메서드가 멱등성을 가졌다고 말한다. 다만 서버가 REST API를 잘 다랐다는 전제하에 멱등성 제약이 보장된다.","['서버가 상태를 갖지 않는다는 내용 - 2점', 'HTTP method 중에는 GET, PUT, DELETE 등이 있음, 혹은 멱등성이 아닌 메서드 POST, PUT에 대한 내용 - 1점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['서버가 상태를 갖지 않는다는 내용 - 2점', '같은 동작을 여러번 해도 결과가 바뀌지 않는다는 내용 - 2점']","['POST - 1점', '동일한 요청 - 2점', 'stateless - 2점']","['동일한 요청 - 2점', 'stateless - 2점']",mjw8523@gmail.com
140,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,쿠키는 서버의 DB에 연결할 필요가 없기 때문에 요청시 속도가 빠르다. 세션은 정보가 서버에 있기 때문에 DB에 접근해야 해서 비교적으로 느리다.,"['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']","['저장위치 - 2점', '속도 - 1점']",mjw8523@gmail.com
379,recRLoltonwRHFxH8,[자료구조 2] Stack의 특징을 설명해주세요.,kshired,"스택(Stack)이란 자료구조는 선입후출(First In, Last Out: FILO), 후입선출(Last In, First Out: LIFO)의 구조를 가지고 있습니다. 스택의 특징으로는, 한 방향 끝에서만 데이터의 삽입과 제거가 이루어진다는 것입니다.","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ', '삽입, 삭제, 조회의 시간 복잡도가 O(1) - 2점']","['Last In First Out  - 2점 ', '자료의 삽입과 삭제가 한 곳에서만 이루어짐 - 1점 ']","['삭제 - 1점', '시간복잡도 - 1점', '삽입 - 1점', 'LIFO - 2점']","['삭제 - 1점', '삽입 - 1점', 'LIFO - 2점']",mjw8523@gmail.com
12,recXfKthnQLwWETgb,[네트워크 1] 쿠키와 세션의 차이점을 설명해주세요.,jack,"쿠키는 클라이언트, 세션 정보는 서버 측에 저장됩니다.","['세션이 쿠키보다 보안에 유리하다는 내용 - 1점', '세션이 쿠키보다 속도가 느리다는 내용 - 1점', '저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점', 'Lifecycle에 대한 내용 - 1점']","['저장위치가 쿠키는 클라이언트측이고, 세션은 웹서버라는 내용 - 2점']","['Lifecycle - 1점', '보안 - 1점', '저장위치 - 2점', '속도 - 1점']",['저장위치 - 2점'],mjw8523@gmail.com
57,reciNccHh7EP8mRwD,[자료구조 1] Array의 특징을 설명해주세요.,kshired,"배열은 같은 타입의 데이터를 연속적으로 저장한 자료구조입니다. 배열의 특징은 '정적'이라는 점과 '연속적'이라는 것이죠. 정적이라는 말은 처음 배열의 크기가 정해지면 크기를 변경할 수 없음을 뜻합니다. 연속적이라는 건 메모리 상에서 배열의 첫번째 요소는 두번째 요소와 연이어 붙어있다는 것을 말합니다. 즉, 모든 요소들이 저장된 위치는 연속적으로 붙어있습니다.","['인덱스(index)로 해당 원소(element)에 접근할 수 있다. - 2점', 'O(1)에 random access가 가능하다. - 1점', '논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점']",['논리적 저장 순서와 물리적 저장 순서가 일치한다. - 2점'],"['랜덤 액세스 -2점', '시간 복잡도 - 1점', '저장 순서 - 2점']",['저장 순서 - 2점'],mjw8523@gmail.com
327,recvqnC3QKpHRbqYl,[데이터베이스 3] DB Index를 어떤 특징을 가진 column에 사용하면 좋을지 설명해주세요.,big jo,데이터의 중복도가 낮아서 분포도가 높은 컬럼에 대해 인덱스를 사용해야 한다.,"['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '조건절에서 많이 사용되는 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점', '삽입, 삭제, 변경이 적게 일어나는 컬럼 - 1.25점']","['카디널리티가 상대적으로 높은 컬럼 - 1.25점', '선택도가 상대적으로 낮은 컬럼 - 1.25점']","['카디널리티 - 1.25점', '수정 빈도 - 1.25점', '조회 빈도 - 1.25점', '선택도 - 1.25점']",[],mjw8523@gmail.com
